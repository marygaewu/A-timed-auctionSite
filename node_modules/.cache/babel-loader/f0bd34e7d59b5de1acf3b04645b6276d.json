{"ast":null,"code":"var _jsxFileName = \"/home/zetsuboii/dev/react/reach-react-template/src/components/participants/UserViews.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserViews = props => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [value, setValue] = useState(0);\n\n  const handleGet = () => {\n    _s();\n\n    return props.useCommand(['Get', null]);\n  };\n\n  _s(handleGet, \"wlOIMRDMpzBC1MuLeyAJUzrQ+8A=\", false, function () {\n    return [props.useCommand];\n  });\n\n  const handleSet = () => {\n    _s2();\n\n    return props.useCommand(['Set', value]);\n  };\n  /**\n   * @dev Bu kısımda gelen appState'e göre bilgi göstermek gerekli\n   * reachStorage kontratında sadece bir etkileşim olduğu için\n   * bir adet form bir adet de görüntüleme kutusu olacak.\n   * \n   * Bu kontrata özel bir tasarım olduğu için çok özen göstermedim\n   * Kendi sitenizde istediğiniz gibi şekil verirsiniz.\n   */\n\n\n  _s2(handleSet, \"wlOIMRDMpzBC1MuLeyAJUzrQ+8A=\", false, function () {\n    return [props.useCommand];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGet,\n          children: \"Get Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            value: value,\n            onChange: setValue,\n            type: \"number\",\n            placeholder: \"Enter value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSet,\n            children: \"Set Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: props.appState === \"valueChanged\" && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Value changed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Value is changed by \", props.args[1], \" to \", props.args[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: props.appState === \"seeValue\" && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Value changed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"seeValue is \", props.args[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingModal, {\n      show: !props.useCommandReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(UserViews, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c = UserViews;\n\nconst LoadingModal = ({\n  show\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Waiting for the contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = LoadingModal;\nexport default UserViews;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserViews\");\n$RefreshReg$(_c2, \"LoadingModal\");","map":{"version":3,"sources":["/home/zetsuboii/dev/react/reach-react-template/src/components/participants/UserViews.js"],"names":["React","useState","Container","Row","Col","Modal","Button","Spinner","Form","Alert","UserViews","props","value","setValue","handleGet","useCommand","handleSet","appState","args","useCommandReady","LoadingModal","show"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst UserViews = props => {\n\n    const [value, setValue] = useState(0);\n\n    const handleGet = () => props.useCommand(['Get', null]);\n    const handleSet = () => props.useCommand(['Set', value]);\n\n    /**\n     * @dev Bu kısımda gelen appState'e göre bilgi göstermek gerekli\n     * reachStorage kontratında sadece bir etkileşim olduğu için\n     * bir adet form bir adet de görüntüleme kutusu olacak.\n     * \n     * Bu kontrata özel bir tasarım olduğu için çok özen göstermedim\n     * Kendi sitenizde istediğiniz gibi şekil verirsiniz.\n     */\n    return (\n        <Container className=\"mt-4\">\n            <Row>\n                <Col md={6}>\n                    <Button onClick={handleGet}>Get Value</Button>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Control value={value} onChange={setValue} type=\"number\" placeholder=\"Enter value\" />\n                        <Button onClick={handleSet}>Set Value</Button>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    {props.appState === \"valueChanged\" &&\n                        <Alert variant=\"success\">\n                            <Alert.Heading>Value changed</Alert.Heading>\n                            <p>Value is changed by {props.args[1]} to {props.args[0]}</p>\n                        </Alert>}\n                </Col>\n                <Col>\n                    {props.appState === \"seeValue\" &&\n                        <Alert variant=\"success\">\n                            <Alert.Heading>Value changed</Alert.Heading>\n                            <p>seeValue is {props.args[0]}</p>\n                        </Alert>}\n                </Col>\n            </Row>\n            {/* \n                Burada Loading Modal'ı başka bir değişkene göre\n                çağırıp sadece ilk yüklemede görünmesini \n                sağlayabilirsiniz.\n            */}\n            <LoadingModal show={!props.useCommandReady} />\n        </Container>\n    );\n}\n\nconst LoadingModal = ({ show }) => {\n    return (\n        <Modal show={show} className=\"text-center\">\n            <Modal.Body>\n                <h2>Waiting for the contract</h2>\n                <Spinner animation=\"border\" />\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default UserViews;"]},"metadata":{},"sourceType":"module"}