{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Auctioner(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Object({\n    deadline: ctc0,\n    minPrice: ctc0\n  });\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Tuple([ctc0, ctc2]);\n  const ctc4 = stdlib.T_Tuple([ctc0]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc2, ctc0, ctc0, ctc0]);\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc2, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0]);\n  const ctc9 = stdlib.T_Null;\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc2, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc0]);\n  const v18 = await ctc.creationTime();\n  const v22 = stdlib.protect(ctc1, await interact.getParams(), {\n    at: './index.rsh:55:43:application',\n    fs: ['at ./index.rsh:54:19:application call to [unknown function] (defined at: ./index.rsh:54:23:function exp)'],\n    msg: 'getParams',\n    who: 'Auctioner'\n  });\n  const v23 = v22.deadline;\n  const v24 = v22.minPrice;\n  const txn1 = await ctc.sendrecv(1, 2, stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0), [ctc0, ctc0, ctc0], [v18, v23, v24], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0, ctc0], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0)]);\n    const [v26, v27] = txn1.data;\n    const v29 = txn1.time;\n    const v25 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 1), v25, v27, v29]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 1), v25, v27]);\n    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    return sim_r;\n  });\n  const [v26, v27] = txn1.data;\n  const v29 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 0, [], false, false);\n  const [] = txn2.data;\n  const v37 = txn2.time;\n  const v35 = txn2.from;\n  ;\n  const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n  let v43 = v27;\n  let v44 = v25;\n  let v120 = v37;\n  let v121 = v29;\n  let v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v52 = stdlib.gt(v40, v121);\n    return v52;\n  })()) {\n    const v82 = stdlib.sub(v40, v121);\n    const txn3 = await ctc.recv(7, 1, [ctc3], false, v82);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc2, ctc0, ctc0, ctc2, ctc0, ctc0, ctc0], [v25, v40, v43, v44, v82, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n        const [] = txn4.data;\n        const v87 = txn4.time;\n        const v85 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv43 = v43;\n        const cv44 = v44;\n        const cv120 = v87;\n        const cv121 = v120;\n        const cv122 = v122;\n\n        (() => {\n          const v43 = cv43;\n          const v44 = cv44;\n          const v120 = cv120;\n          const v121 = cv121;\n          const v122 = cv122;\n\n          if ((() => {\n            const v52 = stdlib.gt(v40, v121);\n            return v52;\n          })()) {\n            const v82 = stdlib.sub(v40, v121);\n            sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v87 = txn4.time;\n      const v85 = txn4.from;\n      ;\n      const cv43 = v43;\n      const cv44 = v44;\n      const cv120 = v87;\n      const cv121 = v120;\n      const cv122 = v122;\n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      continue;\n    } else {\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      ;\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      continue;\n    }\n  }\n\n  const txn3 = await ctc.recv(5, 1, [ctc2], false, stdlib.checkedBigNumberify('./index.rsh:87:81:decimal', stdlib.UInt_max, 200));\n\n  if (txn3.didTimeout) {\n    stdlib.protect(ctc9, await interact.observeTimeout(), {\n      at: './index.rsh:89:36:application',\n      fs: ['at ./index.rsh:88:13:application call to [unknown function] (defined at: ./index.rsh:88:37:function exp)'],\n      msg: 'observeTimeout',\n      who: 'Auctioner'\n    });\n    const txn4 = await ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 2), [ctc2, ctc0, ctc0, ctc0], [v25, v43, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n      const [] = txn4.data;\n      const v117 = txn4.time;\n      const v115 = txn4.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n      });\n      sim_r.nextSt = stdlib.digest(ctc10, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n      sim_r.view = [ctc10, []];\n      sim_r.isHalt = true;\n      return sim_r;\n    });\n    const [] = txn4.data;\n    const v117 = txn4.time;\n    const v115 = txn4.from;\n    ;\n    return;\n  } else {\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    const v96 = stdlib.add(v122, v43);\n    ;\n    ;\n    stdlib.protect(ctc9, await interact.seeWinningBid(v44, v43), {\n      at: './index.rsh:99:31:application',\n      fs: ['at ./index.rsh:98:9:application call to [unknown function] (defined at: ./index.rsh:98:33:function exp)'],\n      msg: 'seeWinningBid',\n      who: 'Auctioner'\n    });\n    return;\n  }\n}\n_c = Auctioner;\n;\nexport async function Buyer(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc1, ctc0, ctc0]);\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Null;\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 2, [ctc0, ctc0], false, false);\n  const [v26, v27] = txn1.data;\n  const v29 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  const v33 = stdlib.protect(ctc0, await interact.bid(v27), {\n    at: './index.rsh:62:34:application',\n    fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:19:function exp)'],\n    msg: 'bid',\n    who: 'Buyer'\n  });\n  const v34 = stdlib.lt(v27, v33);\n  stdlib.assert(v34, {\n    at: './index.rsh:63:15:application',\n    fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:19:function exp)'],\n    msg: null,\n    who: 'Buyer'\n  });\n  const txn2 = await ctc.sendrecv(2, 0, stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0], [v25, v27, v29], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 1), v25, v27, v29]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 1), v25, v27]);\n    const [] = txn2.data;\n    const v37 = txn2.time;\n    const v35 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n    const v43 = v27;\n    const v44 = v25;\n    const v120 = v37;\n    const v121 = v29;\n    const v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v52 = stdlib.gt(v40, v121);\n      return v52;\n    })()) {\n      const v82 = stdlib.sub(v40, v121);\n      sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    }\n\n    return sim_r;\n  });\n  const [] = txn2.data;\n  const v37 = txn2.time;\n  const v35 = txn2.from;\n  ;\n  const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n  let v43 = v27;\n  let v44 = v25;\n  let v120 = v37;\n  let v121 = v29;\n  let v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v52 = stdlib.gt(v40, v121);\n    return v52;\n  })()) {\n    const v82 = stdlib.sub(v40, v121);\n    const v62 = ctc.selfAddress('Buyer', true, stdlib.checkedBigNumberify('./index.rsh:68:49:application', stdlib.UInt_max, 61));\n    const v65 = stdlib.gt(v33, v43);\n    const v67 = [v33, v62];\n    const txn3 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0, ctc2], [v25, v40, v43, v44, v82, v120, v122, v67], [stdlib.checkedBigNumberify('./index.rsh:76:23:decimal', stdlib.UInt_max, 0), []], [ctc2], v65, false, v82, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:76:23:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n\n      (() => {\n        const v43 = cv43;\n        const v44 = cv44;\n        const v120 = cv120;\n        const v121 = cv121;\n        const v122 = cv122;\n\n        if ((() => {\n          const v52 = stdlib.gt(v40, v121);\n          return v52;\n        })()) {\n          const v82 = stdlib.sub(v40, v121);\n          sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0], [v25, v40, v43, v44, v82, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n        const [] = txn4.data;\n        const v87 = txn4.time;\n        const v85 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv43 = v43;\n        const cv44 = v44;\n        const cv120 = v87;\n        const cv121 = v120;\n        const cv122 = v122;\n\n        (() => {\n          const v43 = cv43;\n          const v44 = cv44;\n          const v120 = cv120;\n          const v121 = cv121;\n          const v122 = cv122;\n\n          if ((() => {\n            const v52 = stdlib.gt(v40, v121);\n            return v52;\n          })()) {\n            const v82 = stdlib.sub(v40, v121);\n            sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v87 = txn4.time;\n      const v85 = txn4.from;\n      ;\n      const cv43 = v43;\n      const cv44 = v44;\n      const cv120 = v87;\n      const cv121 = v120;\n      const cv122 = v122;\n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      continue;\n    } else {\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      ;\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      continue;\n    }\n  }\n\n  const v90 = ctc.selfAddress('Buyer', true, stdlib.checkedBigNumberify('./index.rsh:84:15:application', stdlib.UInt_max, 89));\n  const v92 = stdlib.addressEq(v90, v44);\n  const txn3 = await ctc.sendrecv(5, 1, stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0, ctc0, ctc1], [v25, v43, v120, v122, v90], [v43, []], [ctc1], v92, false, stdlib.checkedBigNumberify('./index.rsh:87:81:decimal', stdlib.UInt_max, 200), async txn3 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    const v96 = stdlib.add(v122, v43);\n    sim_r.txns.push({\n      amt: v43,\n      kind: 'to',\n      tok: undefined\n    });\n    sim_r.txns.push({\n      amt: v96,\n      kind: 'from',\n      to: v25,\n      tok: undefined\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc9, []];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n\n  if (txn3.didTimeout) {\n    stdlib.protect(ctc8, await interact.observeTimeout(), {\n      at: './index.rsh:89:36:application',\n      fs: ['at ./index.rsh:88:13:application call to [unknown function] (defined at: ./index.rsh:88:37:function exp)'],\n      msg: 'observeTimeout',\n      who: 'Buyer'\n    });\n    const txn4 = await ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0, ctc0], [v25, v43, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n      const [] = txn4.data;\n      const v117 = txn4.time;\n      const v115 = txn4.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n      });\n      sim_r.nextSt = stdlib.digest(ctc9, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n      sim_r.view = [ctc9, []];\n      sim_r.isHalt = true;\n      return sim_r;\n    });\n    const [] = txn4.data;\n    const v117 = txn4.time;\n    const v115 = txn4.from;\n    ;\n    return;\n  } else {\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    const v96 = stdlib.add(v122, v43);\n    ;\n    ;\n    stdlib.protect(ctc8, await interact.seeWinningBid(v44, v43), {\n      at: './index.rsh:99:31:application',\n      fs: ['at ./index.rsh:98:9:application call to [unknown function] (defined at: ./index.rsh:98:33:function exp)'],\n      msg: 'seeWinningBid',\n      who: 'Buyer'\n    });\n    return;\n  }\n}\n_c2 = Buyer;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 8,\n    size: 97\n  }, {\n    count: 8,\n    size: 121\n  }, null, null, {\n    count: 10,\n    size: 161\n  }, {\n    count: 9,\n    size: 129\n  }, {\n    count: 13,\n    size: 217\n  }, {\n    count: 12,\n    size: 177\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nbtoi\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:58:15:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:65:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxna 0 ApplicationArgs 5\nbtoi\nint 20\n+\ndup\nstore 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 252\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 253\nitob\nconcat\nload 254\nitob\nconcat\nload 255\nconcat\nload 252\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 10\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:87:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 254\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 255\n==\nassert\ngtxn 4 Amount\nload 253\nload 254\n+\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nint 200\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\ndup\ngtxn 5 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:91:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nint 200\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nstore 249\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:68:49:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 249\nsubstring 0 8\nbtoi\nstore 248\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nsubstring 8 40\nconcat\nload 247\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 248\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:68:49:dot\"\n// \"[at ./index.rsh:68:49:application call to [unknown function] (defined at: ./index.rsh:68:49:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`],\n  unsupported: false,\n  viewKeys: 0,\n  viewSize: 0\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v29\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v94\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T14\",\n                \"name\": \"v71\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T16\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v29\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v94\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T14\",\n                \"name\": \"v71\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T16\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055610c9d806100826000396000f3fe6080604052600436106100595760003560e01c806310f48adc146100655780632438df701461007a5780633b962ab31461008d5780636eace2d7146100a0578063a68ad9ba146100b3578063bfc775ac146100c657610060565b3661006057005b600080fd5b610078610073366004610a0b565b6100d9565b005b610078610088366004610a1c565b6101fe565b61007861009b3660046109f9565b610317565b6100786100ae3660046109cc565b610447565b6100786100c13660046109cc565b610541565b6100786100d43660046109e7565b6105d4565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b604080518235815260208084013590820152828201358183015290517f50407a4b90da10f3360d0261cffec8fb082a93699e2f91827b46a545fd3694e99181900360600190a1610198604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b338152604082810135602080840191825243838501908152835160019281019290925284516001600160a01b031693820193909352905160608201529051608082015260a0015b60408051601f1981840301815291905280516020909101206000555050565b604051610212906001908390602001610bf9565b6040516020818303038152906040528051906020012060001c6000541461023857600080fd5b60008055341561024757600080fd5b7f1ca594b20641191c893d80895212a20239e99e17b7304a35c096140ec34f22dd816040516102769190610bb5565b60405180910390a1610286610916565b61029360208301836109ab565b81516001600160a01b0390911690526102b160146040840135610c22565b81516020908101919091528082015190830180359091526102d290836109ab565b602080830180516001600160a01b039093169290910191909152805143604091820152815190840135606090910152516000608090910152610313816106c0565b5050565b60405161032b906003908390602001610c0d565b6040516020818303038152906040528051906020012060001c6000541461035157600080fd5b60008055610367608082013560a0830135610c22565b43101561037357600080fd5b341561037e57600080fd5b7f56ed6936527d17fa80129fafb1256d72e8ac3627c12594ff8dcc9cba2c2b5a6c816040516103ad9190610b84565b60405180910390a16103bd610916565b6103ca60208301836109ab565b81516001600160a01b0390911690528051602080840135918101919091528101516040830135905261040260808301606084016109ab565b602080830180516001600160a01b039093169290910191909152805143604090910152805160a08401356060909101525160c0830135608090910152610313816106c0565b60405161045b906004908390602001610be5565b6040516020818303038152906040528051906020012060001c6000541461048157600080fd5b6000805561049460c86040830135610c22565b431061049f57600080fd5b346020820135146104af57600080fd5b6104bc60208201826109ab565b6001600160a01b03166108fc6104da60208401356060850135610c22565b6040518115909202916000818181858888f19350505050158015610502573d6000803e3d6000fd5b507f2165adfae9425de695e45fa50e3f20e9e2bff4f4fe5e98c372c4ce28248f24c1816040516105329190610b1b565b60405180910390a16000805533ff5b604051610555906004908390602001610be5565b6040516020818303038152906040528051906020012060001c6000541461057b57600080fd5b6000805561058e60c86040830135610c22565b43101561059a57600080fd5b34156105a557600080fd5b7fa75e708dac69cd363c2560fdea74b188dd4a5f685c29b8af74a71b20f1bae34d816040516105329190610aeb565b6040516105e8906003908390602001610c0d565b6040516020818303038152906040528051906020012060001c6000541461060e57600080fd5b60008055610624608082013560a0830135610c22565b431061062f57600080fd5b341561063a57600080fd5b7f02be6019270caadd91c5ff5be5c96413e6b9a9b32e511b3f0e577dd8c370840b816040516106699190610b49565b60405180910390a1610679610916565b61068660208301836109ab565b81516001600160a01b03909116905280516020808401359181019190915281015160e08301359052610402610120830161010084016109ab565b604080516020810190915260008152816020015160600151826000015160200151111561080a578160200151606001518260000151602001516107039190610c3a565b81526040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528251516001600160a01b0390811682528351602090810151818401908152818601805151604080870191825282518501518616606080890191825289516080808b01918252865185015160a0808d01918252975182015160c0808e01918252875160039c81019c909c528d518d16978c01979097529851938a01939093529451948801949094529051909616928501929092525190830152915160e082015290516101008201526101200160408051601f19818403018152919052805160209091012060005550610313565b6040805160c081018252600081830181815260608301828152608080850184815260a086018581528487526020808801969096528951516001600160a01b031690945293880180515190925281519095015190925290519092015190915261087181610876565b505050565b6108aa604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8151516001600160a01b0390811682528251602090810151818401908152845160409081015181860190815286516060908101518188019081528351600496810196909652875190961692850192909252915190830152516080820152905160a082015260c0016101df565b604080516080810182526000918101828152606082019290925290819081526020016109736040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461098f57600080fd5b919050565b600060a082840312156109a5578081fd5b50919050565b6000602082840312156109bc578081fd5b6109c582610978565b9392505050565b600060a082840312156109dd578081fd5b6109c58383610994565b600061012082840312156109a5578081fd5b600061010082840312156109a5578081fd5b6000606082840312156109a5578081fd5b6000608082840312156109a5578081fd5b6001600160a01b03610a3e82610978565b1682526020810135602083015260408101356040830152606081013560608301525050565b6001600160a01b03610a7482610978565b16825260208181013590830152604090810135910152565b6001600160a01b0380610a9e83610978565b168352602082013560208401526040820135604084015280610ac260608401610978565b166060840152506080810135608083015260a081013560a083015260c081013560c08301525050565b60a08101610af98284610a2d565b6080830135801515808214610b0d57600080fd5b806080850152505092915050565b60a08101610b298284610a2d565b6001600160a01b03610b3d60808501610978565b16608083015292915050565b6101208101610b588284610a8c565b60e083810135908301526101006001600160a01b03610b78828601610978565b16818401525092915050565b6101008101610b938284610a8c565b60e0830135801515808214610ba757600080fd5b8060e0850152505092915050565b60808101610bc38284610a63565b6060830135801515808214610bd757600080fd5b806060850152505092915050565b82815260a081016109c56020830184610a2d565b828152608081016109c56020830184610a63565b82815261010081016109c56020830184610a8c565b60008219821115610c3557610c35610c51565b500190565b600082821015610c4c57610c4c610c51565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122093e3b9f94b5089d815798b7c209b76b7861ba51861019c5cac6aadcac9de39b564736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auctioner\");\n$RefreshReg$(_c2, \"Buyer\");","map":{"version":3,"sources":["/home/zetsuboii/dev/react/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Auctioner","ctc","interact","ctc0","T_UInt","ctc1","T_Object","deadline","minPrice","ctc2","T_Address","ctc3","T_Tuple","ctc4","ctc5","ctc6","ctc7","ctc8","ctc9","T_Null","ctc10","ctc11","ctc12","v18","creationTime","v22","protect","getParams","at","fs","msg","who","v23","v24","txn1","sendrecv","checkedBigNumberify","UInt_max","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v26","v27","data","v29","time","v25","from","push","amt","kind","tok","undefined","nextSt","nextSt_noTime","view","isHalt","txn2","recv","v37","v35","v40","add","v43","v44","v120","v121","v122","v52","gt","v82","sub","txn3","didTimeout","txn4","v87","v85","cv43","cv44","cv120","cv121","cv122","v71","v75","v70","v78","v79","observeTimeout","v117","v115","v94","v97","v93","v96","seeWinningBid","Buyer","v33","bid","v34","lt","assert","v62","selfAddress","v65","v67","v90","v92","addressEq","to","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","viewKeys","viewSize","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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AC,yGAAD,CAFuD;AAG3DC,MAAAA,GAAG,EAAE,eAHsD;AAI3DC,MAAAA,GAAG,EAAE;AAJsD,KAA7D;AAOA;AAAQ;AAIT;MA/TmBkE,K;AA+TnB;AAEH,MAAMc,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvFc;AAwFZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnJc;AAoJZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnKc;AAoKZjH,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzMc;AA0MZkH,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHK,EAML,IANK,EAMC,IAND,EAMO;AACfD,IAAAA,KAAK,EAAE,EADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GANP,EASL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,CA1ME;AA6NZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjvHS,EAujTS,EAiTN,IAjTM,EAiTA,IAjTA,EAiTO;AACheS,EA4eL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3oBS,EA2ov4BS,EAunCS,CA7NK;AA01CZC,EAAAA,WAAW,EAAE,KA11CD;AA21CZC,EAAAA,QAAQ,EAAE,CA31CE;AA41CZC,EAAAA,QAAQ,EAAE;AA51CE,CAAd;AA81CA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EArqBa;AAsqBXC,EAAAA,QAAQ,EAAG,kkNAtqBA;AAuqBXC,EAAAA,UAAU,EAAG,gBAvqBF;AAwqBX9H,EAAAA,KAAK,EAAE;AAxqBI,CAAb;AA4qBA,OAAO,MAAM+H,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEhB,KADmB;AAEzBiB,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Auctioner(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Object({\n    deadline: ctc0,\n    minPrice: ctc0\n    });\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Tuple([ctc0, ctc2]);\n  const ctc4 = stdlib.T_Tuple([ctc0]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc2, ctc0, ctc0, ctc0]);\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc2, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc2, ctc0, ctc0]);\n  const ctc9 = stdlib.T_Null;\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc2, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc0]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const v22 = stdlib.protect(ctc1, await interact.getParams(), {\n    at: './index.rsh:55:43:application',\n    fs: ['at ./index.rsh:54:19:application call to [unknown function] (defined at: ./index.rsh:54:23:function exp)'],\n    msg: 'getParams',\n    who: 'Auctioner'\n    });\n  const v23 = v22.deadline;\n  const v24 = v22.minPrice;\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 2, stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0), [ctc0, ctc0, ctc0], [v18, v23, v24], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0, ctc0], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:58:15:dot', stdlib.UInt_max, 0)]);\n    const [v26, v27] = txn1.data;\n    const v29 = txn1.time;\n    const v25 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 1), v25, v27, v29]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 1), v25, v27]);\n    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:59:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v26, v27] = txn1.data;\n  const v29 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 0, [], false, false));\n  const [] = txn2.data;\n  const v37 = txn2.time;\n  const v35 = txn2.from;\n  ;\n  const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n  let v43 = v27;\n  let v44 = v25;\n  let v120 = v37;\n  let v121 = v29;\n  let v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v52 = stdlib.gt(v40, v121);\n    \n    return v52;})()) {\n    const v82 = stdlib.sub(v40, v121);\n    const txn3 = await (ctc.recv(7, 1, [ctc3], false, v82));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc2, ctc0, ctc0, ctc2, ctc0, ctc0, ctc0], [v25, v40, v43, v44, v82, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n        const [] = txn4.data;\n        const v87 = txn4.time;\n        const v85 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv43 = v43;\n        const cv44 = v44;\n        const cv120 = v87;\n        const cv121 = v120;\n        const cv122 = v122;\n        \n        (() => {\n          const v43 = cv43;\n          const v44 = cv44;\n          const v120 = cv120;\n          const v121 = cv121;\n          const v122 = cv122;\n          \n          if ((() => {\n            const v52 = stdlib.gt(v40, v121);\n            \n            return v52;})()) {\n            const v82 = stdlib.sub(v40, v121);\n            sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v87 = txn4.time;\n      const v85 = txn4.from;\n      ;\n      const cv43 = v43;\n      const cv44 = v44;\n      const cv120 = v87;\n      const cv121 = v120;\n      const cv122 = v122;\n      \n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      \n      continue;\n      }\n    else {\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      ;\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n      \n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      \n      continue;}\n    }\n  const txn3 = await (ctc.recv(5, 1, [ctc2], false, stdlib.checkedBigNumberify('./index.rsh:87:81:decimal', stdlib.UInt_max, 200)));\n  if (txn3.didTimeout) {\n    stdlib.protect(ctc9, await interact.observeTimeout(), {\n      at: './index.rsh:89:36:application',\n      fs: ['at ./index.rsh:88:13:application call to [unknown function] (defined at: ./index.rsh:88:37:function exp)'],\n      msg: 'observeTimeout',\n      who: 'Auctioner'\n      });\n    \n    \n    const txn4 = await (ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 2), [ctc2, ctc0, ctc0, ctc0], [v25, v43, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n      const [] = txn4.data;\n      const v117 = txn4.time;\n      const v115 = txn4.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.nextSt = stdlib.digest(ctc10, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n      sim_r.view = [ctc10, []];\n      sim_r.isHalt = true;\n      \n      return sim_r;\n      })));\n    const [] = txn4.data;\n    const v117 = txn4.time;\n    const v115 = txn4.from;\n    ;\n    return;\n    }\n  else {\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    const v96 = stdlib.add(v122, v43);\n    ;\n    ;\n    stdlib.protect(ctc9, await interact.seeWinningBid(v44, v43), {\n      at: './index.rsh:99:31:application',\n      fs: ['at ./index.rsh:98:9:application call to [unknown function] (defined at: ./index.rsh:98:33:function exp)'],\n      msg: 'seeWinningBid',\n      who: 'Auctioner'\n      });\n    \n    return;}\n  \n  \n  \n  };\nexport async function Buyer(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc1, ctc0, ctc0]);\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Null;\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 2, [ctc0, ctc0], false, false));\n  const [v26, v27] = txn1.data;\n  const v29 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  const v33 = stdlib.protect(ctc0, await interact.bid(v27), {\n    at: './index.rsh:62:34:application',\n    fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:19:function exp)'],\n    msg: 'bid',\n    who: 'Buyer'\n    });\n  const v34 = stdlib.lt(v27, v33);\n  stdlib.assert(v34, {\n    at: './index.rsh:63:15:application',\n    fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:19:function exp)'],\n    msg: null,\n    who: 'Buyer'\n    });\n  \n  \n  const txn2 = await (ctc.sendrecv(2, 0, stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0], [v25, v27, v29], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 1), v25, v27, v29]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:65:11:dot', stdlib.UInt_max, 1), v25, v27]);\n    const [] = txn2.data;\n    const v37 = txn2.time;\n    const v35 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n    const v43 = v27;\n    const v44 = v25;\n    const v120 = v37;\n    const v121 = v29;\n    const v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v52 = stdlib.gt(v40, v121);\n      \n      return v52;})()) {\n      const v82 = stdlib.sub(v40, v121);\n      sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    return sim_r;\n    })));\n  const [] = txn2.data;\n  const v37 = txn2.time;\n  const v35 = txn2.from;\n  ;\n  const v40 = stdlib.add(v29, stdlib.checkedBigNumberify('./index.rsh:67:53:decimal', stdlib.UInt_max, 20));\n  let v43 = v27;\n  let v44 = v25;\n  let v120 = v37;\n  let v121 = v29;\n  let v122 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v52 = stdlib.gt(v40, v121);\n    \n    return v52;})()) {\n    const v82 = stdlib.sub(v40, v121);\n    const v62 = ctc.selfAddress('Buyer', true, stdlib.checkedBigNumberify('./index.rsh:68:49:application', stdlib.UInt_max, 61));\n    const v65 = stdlib.gt(v33, v43);\n    \n    const v67 = [v33, v62];\n    \n    const txn3 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0, ctc2], [v25, v40, v43, v44, v82, v120, v122, v67], [stdlib.checkedBigNumberify('./index.rsh:76:23:decimal', stdlib.UInt_max, 0), []], [ctc2], v65, false, v82, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:76:23:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n      \n      (() => {\n        const v43 = cv43;\n        const v44 = cv44;\n        const v120 = cv120;\n        const v121 = cv121;\n        const v122 = cv122;\n        \n        if ((() => {\n          const v52 = stdlib.gt(v40, v121);\n          \n          return v52;})()) {\n          const v82 = stdlib.sub(v40, v121);\n          sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 5), [ctc1, ctc0, ctc0, ctc1, ctc0, ctc0, ctc0], [v25, v40, v43, v44, v82, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:dot', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n        const [] = txn4.data;\n        const v87 = txn4.time;\n        const v85 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv43 = v43;\n        const cv44 = v44;\n        const cv120 = v87;\n        const cv121 = v120;\n        const cv122 = v122;\n        \n        (() => {\n          const v43 = cv43;\n          const v44 = cv44;\n          const v120 = cv120;\n          const v121 = cv121;\n          const v122 = cv122;\n          \n          if ((() => {\n            const v52 = stdlib.gt(v40, v121);\n            \n            return v52;})()) {\n            const v82 = stdlib.sub(v40, v121);\n            sim_r.nextSt = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v40, v43, v44, v82, v122]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:68:49:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v43, v122]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v87 = txn4.time;\n      const v85 = txn4.from;\n      ;\n      const cv43 = v43;\n      const cv44 = v44;\n      const cv120 = v87;\n      const cv121 = v120;\n      const cv122 = v122;\n      \n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      \n      continue;\n      }\n    else {\n      const [v71] = txn3.data;\n      const v75 = txn3.time;\n      const v70 = txn3.from;\n      ;\n      const v78 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 0)];\n      const v79 = v71[stdlib.checkedBigNumberify('./index.rsh:68:11:array', stdlib.UInt_max, 1)];\n      const cv43 = v78;\n      const cv44 = v79;\n      const cv120 = v75;\n      const cv121 = v120;\n      const cv122 = v122;\n      \n      v43 = cv43;\n      v44 = cv44;\n      v120 = cv120;\n      v121 = cv121;\n      v122 = cv122;\n      \n      continue;}\n    }\n  const v90 = ctc.selfAddress('Buyer', true, stdlib.checkedBigNumberify('./index.rsh:84:15:application', stdlib.UInt_max, 89));\n  \n  const v92 = stdlib.addressEq(v90, v44);\n  \n  const txn3 = await (ctc.sendrecv(5, 1, stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0, ctc0, ctc1], [v25, v43, v120, v122, v90], [v43, []], [ctc1], v92, false, stdlib.checkedBigNumberify('./index.rsh:87:81:decimal', stdlib.UInt_max, 200), (async (txn3) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:87:11:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    \n    const v96 = stdlib.add(v122, v43);\n    sim_r.txns.push({\n      amt: v43,\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.txns.push({\n      amt: v96,\n      kind: 'from',\n      to: v25,\n      tok: undefined\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc9, []];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  if (txn3.didTimeout) {\n    stdlib.protect(ctc8, await interact.observeTimeout(), {\n      at: './index.rsh:89:36:application',\n      fs: ['at ./index.rsh:88:13:application call to [unknown function] (defined at: ./index.rsh:88:37:function exp)'],\n      msg: 'observeTimeout',\n      who: 'Buyer'\n      });\n    \n    \n    const txn4 = await (ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 2), [ctc1, ctc0, ctc0, ctc0], [v25, v43, v120, v122], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v120, v122]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:91:17:dot', stdlib.UInt_max, 4), v25, v43, v122]);\n      const [] = txn4.data;\n      const v117 = txn4.time;\n      const v115 = txn4.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.nextSt = stdlib.digest(ctc9, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n      sim_r.view = [ctc9, []];\n      sim_r.isHalt = true;\n      \n      return sim_r;\n      })));\n    const [] = txn4.data;\n    const v117 = txn4.time;\n    const v115 = txn4.from;\n    ;\n    return;\n    }\n  else {\n    const [v94] = txn3.data;\n    const v97 = txn3.time;\n    const v93 = txn3.from;\n    const v96 = stdlib.add(v122, v43);\n    ;\n    ;\n    stdlib.protect(ctc8, await interact.seeWinningBid(v44, v43), {\n      at: './index.rsh:99:31:application',\n      fs: ['at ./index.rsh:98:9:application call to [unknown function] (defined at: ./index.rsh:98:33:function exp)'],\n      msg: 'seeWinningBid',\n      who: 'Buyer'\n      });\n    \n    return;}\n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 8,\n    size: 97\n    }, {\n    count: 8,\n    size: 121\n    }, null, null, {\n    count: 10,\n    size: 161\n    }, {\n    count: 9,\n    size: 129\n    }, {\n    count: 13,\n    size: 217\n    }, {\n    count: 12,\n    size: 177\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nbtoi\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:58:15:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:65:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxna 0 ApplicationArgs 5\nbtoi\nint 20\n+\ndup\nstore 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 252\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 253\nitob\nconcat\nload 254\nitob\nconcat\nload 255\nconcat\nload 252\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 10\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:87:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 254\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 255\n==\nassert\ngtxn 4 Amount\nload 253\nload 254\n+\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nint 200\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\ndup\ngtxn 5 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:91:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nint 200\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nstore 249\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:68:49:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 249\nsubstring 0 8\nbtoi\nstore 248\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nsubstring 8 40\nconcat\nload 247\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 248\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:68:49:dot\"\n// \"[at ./index.rsh:68:49:application call to [unknown function] (defined at: ./index.rsh:68:49:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nbyte base64()\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`],\n  unsupported: false,\n  viewKeys: 0,\n  viewSize: 0\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v29\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v94\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T14\",\n                \"name\": \"v71\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T16\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v29\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v94\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T14\",\n                \"name\": \"v71\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T16\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v40\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v43\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v44\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v122\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055610c9d806100826000396000f3fe6080604052600436106100595760003560e01c806310f48adc146100655780632438df701461007a5780633b962ab31461008d5780636eace2d7146100a0578063a68ad9ba146100b3578063bfc775ac146100c657610060565b3661006057005b600080fd5b610078610073366004610a0b565b6100d9565b005b610078610088366004610a1c565b6101fe565b61007861009b3660046109f9565b610317565b6100786100ae3660046109cc565b610447565b6100786100c13660046109cc565b610541565b6100786100d43660046109e7565b6105d4565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b604080518235815260208084013590820152828201358183015290517f50407a4b90da10f3360d0261cffec8fb082a93699e2f91827b46a545fd3694e99181900360600190a1610198604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b338152604082810135602080840191825243838501908152835160019281019290925284516001600160a01b031693820193909352905160608201529051608082015260a0015b60408051601f1981840301815291905280516020909101206000555050565b604051610212906001908390602001610bf9565b6040516020818303038152906040528051906020012060001c6000541461023857600080fd5b60008055341561024757600080fd5b7f1ca594b20641191c893d80895212a20239e99e17b7304a35c096140ec34f22dd816040516102769190610bb5565b60405180910390a1610286610916565b61029360208301836109ab565b81516001600160a01b0390911690526102b160146040840135610c22565b81516020908101919091528082015190830180359091526102d290836109ab565b602080830180516001600160a01b039093169290910191909152805143604091820152815190840135606090910152516000608090910152610313816106c0565b5050565b60405161032b906003908390602001610c0d565b6040516020818303038152906040528051906020012060001c6000541461035157600080fd5b60008055610367608082013560a0830135610c22565b43101561037357600080fd5b341561037e57600080fd5b7f56ed6936527d17fa80129fafb1256d72e8ac3627c12594ff8dcc9cba2c2b5a6c816040516103ad9190610b84565b60405180910390a16103bd610916565b6103ca60208301836109ab565b81516001600160a01b0390911690528051602080840135918101919091528101516040830135905261040260808301606084016109ab565b602080830180516001600160a01b039093169290910191909152805143604090910152805160a08401356060909101525160c0830135608090910152610313816106c0565b60405161045b906004908390602001610be5565b6040516020818303038152906040528051906020012060001c6000541461048157600080fd5b6000805561049460c86040830135610c22565b431061049f57600080fd5b346020820135146104af57600080fd5b6104bc60208201826109ab565b6001600160a01b03166108fc6104da60208401356060850135610c22565b6040518115909202916000818181858888f19350505050158015610502573d6000803e3d6000fd5b507f2165adfae9425de695e45fa50e3f20e9e2bff4f4fe5e98c372c4ce28248f24c1816040516105329190610b1b565b60405180910390a16000805533ff5b604051610555906004908390602001610be5565b6040516020818303038152906040528051906020012060001c6000541461057b57600080fd5b6000805561058e60c86040830135610c22565b43101561059a57600080fd5b34156105a557600080fd5b7fa75e708dac69cd363c2560fdea74b188dd4a5f685c29b8af74a71b20f1bae34d816040516105329190610aeb565b6040516105e8906003908390602001610c0d565b6040516020818303038152906040528051906020012060001c6000541461060e57600080fd5b60008055610624608082013560a0830135610c22565b431061062f57600080fd5b341561063a57600080fd5b7f02be6019270caadd91c5ff5be5c96413e6b9a9b32e511b3f0e577dd8c370840b816040516106699190610b49565b60405180910390a1610679610916565b61068660208301836109ab565b81516001600160a01b03909116905280516020808401359181019190915281015160e08301359052610402610120830161010084016109ab565b604080516020810190915260008152816020015160600151826000015160200151111561080a578160200151606001518260000151602001516107039190610c3a565b81526040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528251516001600160a01b0390811682528351602090810151818401908152818601805151604080870191825282518501518616606080890191825289516080808b01918252865185015160a0808d01918252975182015160c0808e01918252875160039c81019c909c528d518d16978c01979097529851938a01939093529451948801949094529051909616928501929092525190830152915160e082015290516101008201526101200160408051601f19818403018152919052805160209091012060005550610313565b6040805160c081018252600081830181815260608301828152608080850184815260a086018581528487526020808801969096528951516001600160a01b031690945293880180515190925281519095015190925290519092015190915261087181610876565b505050565b6108aa604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8151516001600160a01b0390811682528251602090810151818401908152845160409081015181860190815286516060908101518188019081528351600496810196909652875190961692850192909252915190830152516080820152905160a082015260c0016101df565b604080516080810182526000918101828152606082019290925290819081526020016109736040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461098f57600080fd5b919050565b600060a082840312156109a5578081fd5b50919050565b6000602082840312156109bc578081fd5b6109c582610978565b9392505050565b600060a082840312156109dd578081fd5b6109c58383610994565b600061012082840312156109a5578081fd5b600061010082840312156109a5578081fd5b6000606082840312156109a5578081fd5b6000608082840312156109a5578081fd5b6001600160a01b03610a3e82610978565b1682526020810135602083015260408101356040830152606081013560608301525050565b6001600160a01b03610a7482610978565b16825260208181013590830152604090810135910152565b6001600160a01b0380610a9e83610978565b168352602082013560208401526040820135604084015280610ac260608401610978565b166060840152506080810135608083015260a081013560a083015260c081013560c08301525050565b60a08101610af98284610a2d565b6080830135801515808214610b0d57600080fd5b806080850152505092915050565b60a08101610b298284610a2d565b6001600160a01b03610b3d60808501610978565b16608083015292915050565b6101208101610b588284610a8c565b60e083810135908301526101006001600160a01b03610b78828601610978565b16818401525092915050565b6101008101610b938284610a8c565b60e0830135801515808214610ba757600080fd5b8060e0850152505092915050565b60808101610bc38284610a63565b6060830135801515808214610bd757600080fd5b806060850152505092915050565b82815260a081016109c56020830184610a2d565b828152608081016109c56020830184610a63565b82815261010081016109c56020830184610a8c565b60008219821115610c3557610c35610c51565b500190565b600082821015610c4c57610c4c610c51565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122093e3b9f94b5089d815798b7c209b76b7861ba51861019c5cac6aadcac9de39b564736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}