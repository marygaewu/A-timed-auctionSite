{"ast":null,"code":"var _jsxFileName = \"/home/chara/Desktop/A-timed-auctionSite/src/components/participants/Buyer.js\";\nimport React, { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\nimport { Context } from \"../../Context\";\nimport BuyerViews from \"./BuyerViews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Buyer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: \"\",\n      args: [],\n      salt: 0,\n      amt: 0,\n      resBid: null\n    };\n    this.bidExt = this.bidExt.bind(this);\n  }\n\n  componentDidMount() {\n    const [,,,,,, ctc,, ctcArgs] = this.context;\n    this.interval = setInterval(async () => this.updateBalance(), 20000);\n    Backend.Buyer(ctc[0], this);\n  }\n\n  async updateBalance() {\n    const [account,,, setBalance] = this.context;\n    const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n    setBalance(balance);\n  }\n\n  async bid(minPrice) {\n    const minPriceFormatted = Reach.formatCurrency(minPrice, 4);\n    const bid = await new Promise(res => {\n      this.setState({\n        appState: \"bid\",\n        args: [minPriceFormatted],\n        resBid: res\n      });\n    });\n    this.updateBalance();\n    console.log(`Bid is set to ${bid} ALGO`);\n    this.setState(prevState => ({ ...prevState,\n      amt: bid\n    }));\n    const bidParsed = Reach.parseCurrency(bid);\n    return bidParsed;\n  }\n\n  bidExt(b) {\n    this.state.resBid(b);\n  }\n\n  async mayBid(minPrice) {\n    const [account] = this.context;\n    const balance = await Reach.balanceOf(account);\n\n    const fmt = amt => Reach.formatCurrency(amt, 4);\n\n    console.log(`Balance: ${fmt(balance)}, Minimum Bid: ${fmt(minPrice)}`);\n    return balance >= minPrice;\n  }\n\n  async storeSalt(salt) {\n    const saltFormatted = Reach.bigNumberToNumber(salt);\n    this.setState(prevState => ({ ...prevState,\n      salt: saltFormatted\n    }));\n  }\n\n  async restoreSalt() {\n    return this.state.salt;\n  }\n\n  async restoreBid() {\n    return Reach.parseCurrency(this.state.amt);\n  }\n\n  async madeBid() {\n    this.setState({\n      appState: \"madeBid\"\n    });\n  }\n\n  async observeTimeout() {\n    this.setState({\n      appState: \"observeTimeout\"\n    });\n  }\n\n  async seeWinningBid(address, bid) {\n    const bidFormatted = Reach.formatCurrency(bid, 4);\n    this.setState({\n      appState: \"seeWinningBid\",\n      args: [address, bidFormatted]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BuyerViews, {\n      appState: this.state.appState,\n      args: this.state.args,\n      bidReady: this.state.resBid !== null,\n      bid: this.bidExt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nBuyer.contextType = Context;","map":{"version":3,"sources":["/home/chara/Desktop/A-timed-auctionSite/src/components/participants/Buyer.js"],"names":["React","Component","Backend","Reach","Context","BuyerViews","Buyer","constructor","props","state","appState","args","salt","amt","resBid","bidExt","bind","componentDidMount","ctc","ctcArgs","context","interval","setInterval","updateBalance","account","setBalance","balance","formatCurrency","balanceOf","bid","minPrice","minPriceFormatted","Promise","res","setState","console","log","prevState","bidParsed","parseCurrency","b","mayBid","fmt","storeSalt","saltFormatted","bigNumberToNumber","restoreSalt","restoreBid","madeBid","observeTimeout","seeWinningBid","address","bidFormatted","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\n\nimport { Context } from \"../../Context\";\nimport BuyerViews from \"./BuyerViews\";\n\nexport class Buyer extends Component {\n    static contextType = Context;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            appState: \"\",\n            args: [],\n            salt: 0,\n            amt: 0,\n            resBid: null,\n        };\n\n        this.bidExt = this.bidExt.bind(this);\n    }\n\n    componentDidMount() {\n        const [, , , , , , ctc, , ctcArgs,] = this.context;\n        this.interval = setInterval(async () => this.updateBalance(), 20000);\n\n        Backend.Buyer(ctc[0], this);\n    }\n\n    async updateBalance() {\n        const [account, , , setBalance] = this.context;\n\n        const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n        setBalance(balance);\n    }\n\n    async bid(minPrice) {\n        const minPriceFormatted = Reach.formatCurrency(minPrice, 4);\n        const bid = await new Promise(res => {\n            this.setState({\n                appState: \"bid\",\n                args: [minPriceFormatted],\n                resBid: res,\n            });\n        });\n\n        this.updateBalance();\n\n        console.log(`Bid is set to ${bid} ALGO`);\n        this.setState(prevState => ({\n            ...prevState,\n            amt: bid,\n        }));\n\n        const bidParsed = Reach.parseCurrency(bid);\n        return bidParsed;\n    }\n    bidExt(b) {\n        this.state.resBid(b);\n    }\n\n    async mayBid(minPrice) {\n        const [account,] = this.context;\n        const balance = await Reach.balanceOf(account)\n\n        const fmt = (amt) => Reach.formatCurrency(amt, 4);\n        console.log(`Balance: ${fmt(balance)}, Minimum Bid: ${fmt(minPrice)}`);\n\n        return balance >= minPrice;\n    }\n\n    async storeSalt(salt) {\n        const saltFormatted = Reach.bigNumberToNumber(salt);\n        this.setState(prevState => ({\n            ...prevState,\n            salt: saltFormatted,\n        }));\n    }\n\n    async restoreSalt() {\n        return this.state.salt;\n    }\n\n    async restoreBid() {\n        return Reach.parseCurrency(this.state.amt);\n    }\n\n    async madeBid() {\n        this.setState({\n            appState: \"madeBid\",\n        });\n    }\n\n    async observeTimeout() {\n        this.setState({\n            appState: \"observeTimeout\",\n        });\n    }\n\n    async seeWinningBid(address, bid) {\n        const bidFormatted = Reach.formatCurrency(bid, 4);\n        this.setState({\n            appState: \"seeWinningBid\",\n            args: [address, bidFormatted],\n        });\n    }\n\n    render() {\n        return (<BuyerViews\n            appState={this.state.appState}\n            args={this.state.args}\n            bidReady={this.state.resBid !== null}\n            bid={this.bidExt} />);\n    }\n}"]},"metadata":{},"sourceType":"module"}