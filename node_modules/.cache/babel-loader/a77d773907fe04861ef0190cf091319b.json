{"ast":null,"code":"var _jsxFileName = \"/home/zetsuboii/dev/react/reach-react-template/src/components/participants/Auctioner.js\";\nimport React, { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\nimport { Context } from \"../../Context\";\nimport AuctionerViews from \"./AuctionerViews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Auctioner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: \"\",\n      args: [],\n      resGetParams: null\n    };\n    this.getParamsExt = this.getParamsExt.bind(this);\n  }\n\n  componentDidMount() {\n    const [,,,,,, ctc,, ctcArgs] = this.context;\n    this.interval = setInterval(async () => this.updateBalance(), 20000);\n    Backend.Auctioner(ctc[0], this);\n  }\n\n  async updateBalance() {\n    const [account,,, setBalance] = this.context;\n    const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n    setBalance(balance);\n  }\n\n  async getParams() {\n    const params = await new Promise(res => {\n      this.setState({\n        appState: \"getParams\",\n        resGetParams: res\n      });\n    });\n    console.log(`Params are set to ${params.toString()}`);\n    return params;\n  }\n\n  getParamsExt(p) {\n    this.state.resGetParams(p);\n  }\n\n  async observeTimeout() {\n    this.setState({\n      appState: \"observeTimeout\"\n    });\n  }\n\n  async seeWinningBid(address, bid) {\n    const bidFormatted = Reach.formatCurrency(bid, 4);\n    this.setState({\n      appState: \"seeWinningBid\",\n      args: [address, bidFormatted]\n    });\n    this.updateBalance();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AuctionerViews, {\n      appState: this.state.appState,\n      args: this.state.args,\n      getParamsReady: this.state.resGetParams !== null,\n      getParams: this.getParamsExt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nAuctioner.contextType = Context;","map":{"version":3,"sources":["/home/zetsuboii/dev/react/reach-react-template/src/components/participants/Auctioner.js"],"names":["React","Component","Backend","Reach","Context","AuctionerViews","Auctioner","constructor","props","state","appState","args","resGetParams","getParamsExt","bind","componentDidMount","ctc","ctcArgs","context","interval","setInterval","updateBalance","account","setBalance","balance","formatCurrency","balanceOf","getParams","params","Promise","res","setState","console","log","toString","p","observeTimeout","seeWinningBid","address","bid","bidFormatted","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAGrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM,QAAaC,GAAb,GAAoBC,OAApB,IAAgC,KAAKC,OAA3C;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAY,KAAKC,aAAL,EAAb,EAAmC,KAAnC,CAA3B;AAEAnB,IAAAA,OAAO,CAACI,SAAR,CAAkBU,GAAG,CAAC,CAAD,CAArB,EAA0B,IAA1B;AACH;;AAEkB,QAAbK,aAAa,GAAG;AAClB,UAAM,CAACC,OAAD,IAAcC,UAAd,IAA4B,KAAKL,OAAvC;AAEA,UAAMM,OAAO,GAAGrB,KAAK,CAACsB,cAAN,CAAqB,MAAMtB,KAAK,CAACuB,SAAN,CAAgBJ,OAAhB,CAA3B,EAAqD,CAArD,CAAhB;AACAC,IAAAA,UAAU,CAACC,OAAD,CAAV;AACH;;AAEc,QAATG,SAAS,GAAG;AACd,UAAMC,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AACpC,WAAKC,QAAL,CAAc;AACVrB,QAAAA,QAAQ,EAAE,WADA;AAEVE,QAAAA,YAAY,EAAEkB;AAFJ,OAAd;AAIH,KALoB,CAArB;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBL,MAAM,CAACM,QAAP,EAAkB,EAAnD;AACA,WAAON,MAAP;AACH;;AACDf,EAAAA,YAAY,CAACsB,CAAD,EAAI;AACZ,SAAK1B,KAAL,CAAWG,YAAX,CAAwBuB,CAAxB;AACH;;AAEmB,QAAdC,cAAc,GAAG;AACnB,SAAKL,QAAL,CAAc;AACVrB,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGH;;AAEkB,QAAb2B,aAAa,CAACC,OAAD,EAAUC,GAAV,EAAe;AAC9B,UAAMC,YAAY,GAAGrC,KAAK,CAACsB,cAAN,CAAqBc,GAArB,EAA0B,CAA1B,CAArB;AACA,SAAKR,QAAL,CAAc;AACVrB,MAAAA,QAAQ,EAAE,eADA;AAEVC,MAAAA,IAAI,EAAE,CAAC2B,OAAD,EAAUE,YAAV;AAFI,KAAd;AAIA,SAAKnB,aAAL;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBAAQ,QAAC,cAAD;AACJ,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWC,QADjB;AAEJ,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFb;AAGJ,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,YAAX,KAA4B,IAHxC;AAIJ,MAAA,SAAS,EAAE,KAAKC;AAJZ;AAAA;AAAA;AAAA;AAAA,YAAR;AAKH;;AAjEoC;AAA5BP,S,CACFoC,W,GAActC,O","sourcesContent":["import React, { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\n\nimport { Context } from \"../../Context\";\nimport AuctionerViews from \"./AuctionerViews\";\n\nexport class Auctioner extends Component {\n    static contextType = Context;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            appState: \"\",\n            args: [],\n            resGetParams: null,\n        };\n\n        this.getParamsExt = this.getParamsExt.bind(this);\n    }\n\n    componentDidMount() {\n        const [, , , , , , ctc, , ctcArgs,] = this.context;\n        this.interval = setInterval(async () => this.updateBalance(), 20000);\n\n        Backend.Auctioner(ctc[0], this);\n    }\n\n    async updateBalance() {\n        const [account, , , setBalance] = this.context;\n\n        const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n        setBalance(balance);\n    }\n\n    async getParams() {\n        const params = await new Promise(res => {\n            this.setState({\n                appState: \"getParams\",\n                resGetParams: res,\n            });\n        });\n\n        console.log(`Params are set to ${params.toString()}`);\n        return params;\n    }\n    getParamsExt(p) {\n        this.state.resGetParams(p);\n    }\n\n    async observeTimeout() {\n        this.setState({\n            appState: \"observeTimeout\",\n        });\n    }\n\n    async seeWinningBid(address, bid) {\n        const bidFormatted = Reach.formatCurrency(bid, 4);\n        this.setState({\n            appState: \"seeWinningBid\",\n            args: [address, bidFormatted],\n        });\n        this.updateBalance();\n    }\n\n    render() {\n        return (<AuctionerViews\n            appState={this.state.appState}\n            args={this.state.args}\n            getParamsReady={this.state.resGetParams !== null}\n            getParams={this.getParamsExt} />);\n    }\n}"]},"metadata":{},"sourceType":"module"}